name: GitHub Release
run-name: GitHub Release for ${{ github.ref_name }} #${{ github.run_number }}

on:
  push:
    branches:
      - main
      - next

env:
  ACT: ""
  NEW_VERSION: ""

permissions:
  contents: read

jobs:
  github-release:
    name: GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write 
      issues: write 
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Release
        id: semantic_release
        if: ${{ !env.ACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEW_VERSION=$(npx semantic-release | grep "Published" | cut -d" " -f9)
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Release (DRY RUN)
        id: semantic_release_dry_run
        if: ${{ env.ACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DRY_RUN_OUTPUT=$(npx semantic-release --dry-run)
          echo "$DRY_RUN_OUTPUT"
          NEW_VERSION=$(echo "$DRY_RUN_OUTPUT" | grep "Published" | cut -d" " -f9)
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

    outputs:
      new_version: ${{ steps.semantic_release.outputs.new_version }}
      new_version_dry_run: ${{ steps.semantic_release_dry_run.outputs.new_version }}

  dockerhub-release:
    name: Push Image to DockerHub
    needs: github-release
    if: needs.github-release.outputs.new_version || needs.github-release.outputs.new_version_dry_run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Docker Metadata (Tags)
        if: ${{ !env.ACT }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            johnnyknighten/test
          tags: |
            type=semver,pattern={{version}},value=${{ needs.github-release.outputs.new_version}}

      - name: Create Docker Metadata (Tags) (DRY RUN)
        if: ${{ env.ACT }}
        id: meta-dry-run
        uses: docker/metadata-action@v5
        with:
          images: |
            johnnyknighten/test
          tags: |
            type=semver,pattern={{version}},value=${{ needs.github-release.outputs.new_version_dry_run }}

      - name: Push Image to Docker Hub
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags:  ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push Image to Docker Hub (DRY RUN)
        if: ${{ env.ACT }}
        run: |
          echo "DRY RUN - Skipping Docker Build and Push"
          echo "The Following Images Would Have Been Pushed:"
          echo "${{ steps.meta-dry-run.outputs.tags }}"
