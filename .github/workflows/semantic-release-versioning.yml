name: Release
run-name: Release Pushed Into ${{ github.ref_name }} - Creating Semantic Release
on:
  workflow_run:
    workflows: 
      - "Docker Build and Test"
    types:
      - completed
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  on-build-and-test-success:
    name: GitHub Release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Release
        id: semantic_release
        if: ${{ !env.ACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Release (DRY RUN)
        id: semantic_release_dry_run
        if: ${{ env.ACT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --dry-run
    outputs:
      version: ${{ steps.semantic_release.outputs.version }}
      version_dry_run: ${{ steps.semantic_release_dry_run.outputs.version }}

  on-build-and-test-failure:
    name: GitHub Release - Aborted
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'Cannot Release - Docker Build and Test Failed'

  dockerhub-push:
    name: Push Image to DockerHub
    runs-on: ubuntu-latest
    needs:
      - on-build-and-test-success
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Image to Docker Hub
        if: ${{ !env.ACT}}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags:  |
            johnnyknighten/test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Push Image to Docker Hub (DRY RUN)
        if: ${{ env.ACT }}
        run: |
          echo "DRY RUN - Skipping Docker Build and Push"
          echo "The Following Images Would Have Been Pushed:"
          echo "\tjohnnyknighten/test:latest"
          echo "\tjohnnyknighten/test:${{ needs.on-build-and-test-success.outputs.version_dry_run }}"
